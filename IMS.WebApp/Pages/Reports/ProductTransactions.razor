@page "/productreport"

@inject ISearchProductTransactionsUseCase SearchProductTransactionsUseCase
@inject IJSRuntime JSRuntime

<h3>Product Transactions</h3>
<br />

<div id="printarea">
    <div class="row">
        <div class="col">
            <label for="ProductName">Product Name</label>
            <input type="text" id="prod" class="form-control" @bind-value="ProductName" />
        </div>
    
        <div class="col">
            <label for="dateFrom">Date from</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>
    
        <div class="col">
            <label for="dateTo">Date to</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>
    
        <div class="col">
            <label for="activityTypeId">Activity type</label>
            <select id="activityTypeId" class="form-control" @bind="activityTypeId">
                <option value="0">----</option>
                <option value="2">Produce Product</option>
                <option value="1">Sell Product</option>
            </select>
        </div>
    
        <div class="col">
            <label for="at">Activity type</label>
            <button type="button" class="btn btn-primary form-control" @onclick="GenerateReport">Search</button>
        </div>
    
        <div class="col">
            <label for="at">&nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>
    @if (productTransactions is not null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Product</th>
                    <th>Activity</th>
                    <th>Qty Before</th>
                    <th>Qty After</th>
                    <th>Production #</th>
                    <th>SO#</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var pt in productTransactions)
                {                
                    <tr>
                        <td>@pt.TransactionDate.ToString("MM/dd/yyyy")</td>
                        <td>@pt.Product.ProductName</td>
                        <td>@pt.ActivityType.ToString()</td>
                        <td>@pt.QuantityBefore</td>
                        <td>@pt.QuantityAfter</td>
                        <td>@pt.ProductionNumber</td>
                        <td>@pt.SalesOrderNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code 
{
    private string ProductName;
    private DateTime dateFrom = DateTime.Now;
    private DateTime dateTo= DateTime.Now;
    private int activityTypeId = 0;
    private IEnumerable<ProductTransaction> productTransactions;

    private async Task GenerateReport()
    {
        ProductTransactionType? activityType = null;
        if (activityTypeId != 0) activityType = (ProductTransactionType)activityTypeId;
        productTransactions = await SearchProductTransactionsUseCase.ExecuteAsync(ProductName, dateFrom, dateTo, activityType);
    }

    private void PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }

}
