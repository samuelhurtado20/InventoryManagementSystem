@page "/products"
@attribute [Authorize]
@inject IViewProductsByNameUseCase ViewProductsByNameUseCase
@inject NavigationManager NavigationManager

<h3>Product Page</h3>
<br/>

<ViewProductsComponent OnSearchProducts="OnSearchProducts"></ViewProductsComponent>

@if(_products != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var product in this._products)
            {
                <ProductItemComponent OnProductDeleted="OnProductDeleted" Product="product"></ProductItemComponent>
            }
        </tbody>
    </table>
}
<br/>
<button type="button" class="btn btn-primary" @onclick="AddProduct">Add Product</button>

@code 
{
    private List<Product> _products;

    protected override async Task OnInitializedAsync()
    {
        //base.OnInitialized();

        this._products = await ViewProductsByNameUseCase.ExecuteAsync();
    }

    private void AddProduct()
    {
        NavigationManager.NavigateTo("/addProduct");
    }

    private void OnSearchProducts(List<Product> products)
    {
        _products = products;
    }

    //private void AddInventory()
    //{
    //    NavigationManager.NavigateTo("/addInventory");
    //}

    private async Task OnProductDeleted()
    {
        this._products = await ViewProductsByNameUseCase.ExecuteAsync();
    }
}
