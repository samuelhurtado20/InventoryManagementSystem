@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<div class="input-group">
    <input typeof="text"
    class="form-control form-control-lg"
    placeholder="Type inventory name here to search" 
    @bind-value="nameToSearch" 
    @bind-value:event="oninput" />

    <button type="button" class="input-group-text btn-success"
    @onclick="@(async()=>{await ViewInventories(); })"
    >View</button>

</div>

@if (this.DisplayResult && _inventories != null && _selectInventory == null)
{
    <div style="overflow-y:auto; max-height:300px; border: 1px solid silver; margin:13px;">
        <ul style="list-style-type:none;">
            @foreach (var inventory in _inventories)
            {
                <li style="cursor:pointer;" @onclick="@( async ()=> { await SelectInventory(inventory); })" @key="inventory.InventoryId">@inventory.InventoryName</li>
            }
        </ul>
    </div>
}

@code {
    private string _nameToSearch;
    public string nameToSearch
    { 
        get => _nameToSearch;        
        set
        {
            _nameToSearch = value;
            if (!string.IsNullOrWhiteSpace(_nameToSearch) && _nameToSearch.Length > 2)
            {
                ViewInventories().ConfigureAwait(true);
            }
        } 
    }
    private List<Inventory> _inventories;
    private Inventory _selectInventory;

    [Parameter]
    public EventCallback<List<Inventory>> OnSearchInventories { get; set; }

    [Parameter]
    public EventCallback<Inventory> OnSelectInventory { get; set; }

    [Parameter]
    public bool DisplayResult { get; set; } = false;

    private async Task ViewInventories()
    {
        var inventories = (await ViewInventoriesByNameUseCase.ExecuteAsync(_nameToSearch ?? string.Empty)).ToList();

        await OnSearchInventories.InvokeAsync(inventories);

        _inventories = inventories;
        _selectInventory = null;

        StateHasChanged();
    }

    private async Task SelectInventory(Inventory inventory)
    {
        await OnSelectInventory.InvokeAsync(inventory);
        _selectInventory = inventory;
    }
}
